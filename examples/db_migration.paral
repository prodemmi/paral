databases = ["main_db", "analytics_db"]

@id "notify_db"
@manual
@args db_name
notify_db:
    > @try curl -H "Content-Type: application/json" -d '{"db": @arg("db_name"),"status":"migration_complete"}' "https://hooks.example.com/db-status"

@id "backup"
@parallel
@for databases
backup:
    > @defer 
      @if(@stash["error"] !== "")
        @print("❌ Backup failed for:", @stash["error"])
    > @printf("💾 Backing up: %s", @value)
    > @try
        pg_dump -U postgres @value > @format("/backups/%s_$(date +%F).sql", @value)
      if(@catch)
        @stash("error", @catch)

@dependall backup
@for databases
migrate:
    > @defer 
      @if(@stash["error"] !== "") 
        @print("❌ Migration failed for:", @stash["error"])
      @else
        @trigger(notify_db, @value)
    > @print("🔄 Migrating:", @value)
    > @try 
        diesel migration run --database-url=@format("%s/%s", @getenv("DB_DSN"), @value)
      if(@catch)
        @stash("error", @catch)