platforms = ["linux"]::["amd64", "arm64"]

@id "send_notify"
@description "Calls build done webhook"
@manual
@args env
notify:
    > @print("ğŸ“¢ Deployment complete for:", @arg("env"))
    > @try curl -H "Content-Type: application/json" -d '{"env": @value("env"),"status":"deployed"}' @getenv("NOTIFY_HOOK")

@id "build"
@for platforms
@parallel
@envfile ".env"
build:
    > @print("ğŸ”¨ Building for:", @format("%s-%s", @value(1), @value(2)))
    > @setenv("CARGO_BUILD_TARGET", "target_@value(2)")
    > cargo build --release --target=@format("%s-unknown-linux-gnu", @value(2))
    > @stash("build_path", @format("./target/%s-unknown-linux-gnu/release/myapp", @value(2)))

@depend build
@envfile ".env"
deploy:
    > @defer @trigger(send_notify, @getenv("DEPLOY_ENV"))
    > @print("ğŸš€ Deploying to:", @getenv("DEPLOY_SERVER"))
    > scp @stash["build_path"] deploy@@getenv("DEPLOY_SERVER"):/app/

@dependall build
deploy_all_message:
    > @print("ğŸš€ All platforms are deployed")