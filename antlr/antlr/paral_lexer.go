// Code generated from antlr/ParalLexer.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ParalLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ParalLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func parallexerLexerInit() {
	staticData := &ParalLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "COMMAND", "FUNCTION", "IF_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'->'", "'@'", "", "'if'", "'endif'", "'='", "", "", "", "", "",
		"", "", "", "':'", "'::'", "", "", "", "'('", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "'@endif'",
	}
	staticData.SymbolicNames = []string{
		"", "CMD_ARROW", "AT", "FUNCTION_START", "IF", "ENDIF", "ASSIGN", "STRING",
		"SINGLE_QUOTE_STRING", "FLOAT", "NUMBER", "BOOLEAN", "ZERO_ONE", "DURATION",
		"URL", "COLON", "COLONCOLON", "COMMA", "LBRACK", "RBRACK", "LRBRACK",
		"RRBRACK", "IDENTIFIER", "NEWLINE", "WS", "COMMAND_NEWLINE", "FUNCTION_CALL_START",
		"COMMAND_IF", "COMMAND_LOOP_KEY", "COMMAND_LOOP_VALUE", "COMMAND_WS",
		"COMMAND_RAW_TEXT", "NESTED_FUNCTION_START", "FUNCTION_END", "FUNCTION_WS",
		"NESTED_IF", "IF_END", "IF_WS",
	}
	staticData.RuleNames = []string{
		"CMD_ARROW", "AT", "FUNCTION_START", "IF", "ENDIF", "ASSIGN", "STRING",
		"SINGLE_QUOTE_STRING", "FLOAT", "NUMBER", "BOOLEAN", "ZERO_ONE", "DURATION",
		"URL", "URL_BODY", "URL_CHAR", "COLON", "COLONCOLON", "COMMA", "LBRACK",
		"RBRACK", "LRBRACK", "RRBRACK", "IDENTIFIER", "NEWLINE", "WS", "COMMAND_NEWLINE",
		"FUNCTION_CALL_START", "COMMAND_IF", "COMMAND_LOOP_KEY", "COMMAND_LOOP_VALUE",
		"COMMAND_STRING", "COMMAND_LBRACK", "COMMAND_RBRACK", "COMMAND_WS",
		"COMMAND_RAW_TEXT", "NESTED_FUNCTION_START", "FUNCTION_END", "FUNCTION_LOOP_KEY",
		"FUNCTION_LOOP_VALUE", "FUNCTION_LBRACK", "FUNCTION_RBRACK", "FUNCTION_STRING",
		"FUNCTION_SINGLE_QUOTE_STRING", "FUNCTION_FLOAT", "FUNCTION_NUMBER",
		"FUNCTION_BOOLEAN", "FUNCTION_ZERO_ONE", "FUNCTION_IDENTIFIER", "FUNCTION_COMMA",
		"FUNCTION_WS", "FUNCTION_NEWLINE", "NESTED_IF", "IF_END", "IF_WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 37, 463, 6, -1, 6, -1, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2,
		7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8,
		7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13,
		2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2,
		19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24,
		7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7,
		29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34,
		2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2,
		40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45,
		7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7,
		50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3,
		1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6,
		1, 6, 1, 6, 5, 6, 143, 8, 6, 10, 6, 12, 6, 146, 9, 6, 1, 6, 1, 6, 1, 7,
		1, 7, 1, 7, 1, 7, 5, 7, 154, 8, 7, 10, 7, 12, 7, 157, 9, 7, 1, 7, 1, 7,
		1, 8, 4, 8, 162, 8, 8, 11, 8, 12, 8, 163, 1, 8, 1, 8, 4, 8, 168, 8, 8,
		11, 8, 12, 8, 169, 1, 9, 4, 9, 173, 8, 9, 11, 9, 12, 9, 174, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 3, 10, 186, 8, 10,
		1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1,
		13, 3, 13, 199, 8, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 3, 13, 214, 8, 13, 1, 13, 1,
		13, 1, 14, 1, 14, 4, 14, 220, 8, 14, 11, 14, 12, 14, 221, 1, 15, 1, 15,
		1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1,
		20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 5, 23, 243, 8, 23, 10, 23,
		12, 23, 246, 9, 23, 1, 24, 3, 24, 249, 8, 24, 1, 24, 1, 24, 1, 25, 4, 25,
		254, 8, 25, 11, 25, 12, 25, 255, 1, 25, 1, 25, 1, 26, 3, 26, 261, 8, 26,
		1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1,
		28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29,
		1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1,
		31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34,
		4, 34, 305, 8, 34, 11, 34, 12, 34, 306, 1, 34, 1, 34, 1, 35, 4, 35, 312,
		8, 35, 11, 35, 12, 35, 313, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1,
		37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38,
		1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1,
		40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42,
		5, 42, 354, 8, 42, 10, 42, 12, 42, 357, 9, 42, 1, 42, 1, 42, 1, 42, 1,
		42, 1, 43, 1, 43, 1, 43, 1, 43, 5, 43, 367, 8, 43, 10, 43, 12, 43, 370,
		9, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 4, 44, 377, 8, 44, 11, 44, 12,
		44, 378, 1, 44, 1, 44, 5, 44, 383, 8, 44, 10, 44, 12, 44, 386, 9, 44, 1,
		44, 1, 44, 1, 45, 4, 45, 391, 8, 45, 11, 45, 12, 45, 392, 1, 45, 1, 45,
		1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 3, 46, 406,
		8, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48, 5, 48, 416,
		8, 48, 10, 48, 12, 48, 419, 9, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1,
		49, 1, 50, 4, 50, 428, 8, 50, 11, 50, 12, 50, 429, 1, 50, 1, 50, 1, 51,
		3, 51, 435, 8, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1,
		52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53,
		1, 53, 1, 53, 1, 54, 4, 54, 458, 8, 54, 11, 54, 12, 54, 459, 1, 54, 1,
		54, 0, 0, 55, 4, 1, 6, 2, 8, 3, 10, 4, 12, 5, 14, 6, 16, 7, 18, 8, 20,
		9, 22, 10, 24, 11, 26, 12, 28, 13, 30, 14, 32, 0, 34, 0, 36, 15, 38, 16,
		40, 17, 42, 18, 44, 19, 46, 20, 48, 21, 50, 22, 52, 23, 54, 24, 56, 25,
		58, 26, 60, 27, 62, 28, 64, 29, 66, 0, 68, 0, 70, 0, 72, 30, 74, 31, 76,
		32, 78, 33, 80, 0, 82, 0, 84, 0, 86, 0, 88, 0, 90, 0, 92, 0, 94, 0, 96,
		0, 98, 0, 100, 0, 102, 0, 104, 34, 106, 0, 108, 35, 110, 36, 112, 37, 4,
		0, 1, 2, 3, 11, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 4, 0, 10, 10, 13,
		13, 39, 39, 92, 92, 1, 0, 48, 57, 1, 0, 48, 49, 4, 0, 100, 100, 104, 104,
		109, 109, 115, 115, 6, 0, 37, 38, 45, 47, 58, 58, 61, 61, 63, 63, 95, 95,
		3, 0, 48, 57, 65, 90, 97, 122, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48,
		57, 65, 90, 95, 95, 97, 122, 2, 0, 9, 9, 32, 32, 5, 0, 9, 10, 13, 13, 40,
		41, 44, 44, 64, 64, 487, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1, 0,
		0, 0, 0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 16, 1,
		0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0, 24,
		1, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0,
		36, 1, 0, 0, 0, 0, 38, 1, 0, 0, 0, 0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0,
		0, 44, 1, 0, 0, 0, 0, 46, 1, 0, 0, 0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0,
		0, 0, 52, 1, 0, 0, 0, 0, 54, 1, 0, 0, 0, 1, 56, 1, 0, 0, 0, 1, 58, 1, 0,
		0, 0, 1, 60, 1, 0, 0, 0, 1, 62, 1, 0, 0, 0, 1, 64, 1, 0, 0, 0, 1, 66, 1,
		0, 0, 0, 1, 68, 1, 0, 0, 0, 1, 70, 1, 0, 0, 0, 1, 72, 1, 0, 0, 0, 1, 74,
		1, 0, 0, 0, 2, 76, 1, 0, 0, 0, 2, 78, 1, 0, 0, 0, 2, 80, 1, 0, 0, 0, 2,
		82, 1, 0, 0, 0, 2, 84, 1, 0, 0, 0, 2, 86, 1, 0, 0, 0, 2, 88, 1, 0, 0, 0,
		2, 90, 1, 0, 0, 0, 2, 92, 1, 0, 0, 0, 2, 94, 1, 0, 0, 0, 2, 96, 1, 0, 0,
		0, 2, 98, 1, 0, 0, 0, 2, 100, 1, 0, 0, 0, 2, 102, 1, 0, 0, 0, 2, 104, 1,
		0, 0, 0, 2, 106, 1, 0, 0, 0, 3, 108, 1, 0, 0, 0, 3, 110, 1, 0, 0, 0, 3,
		112, 1, 0, 0, 0, 4, 114, 1, 0, 0, 0, 6, 119, 1, 0, 0, 0, 8, 121, 1, 0,
		0, 0, 10, 127, 1, 0, 0, 0, 12, 130, 1, 0, 0, 0, 14, 136, 1, 0, 0, 0, 16,
		138, 1, 0, 0, 0, 18, 149, 1, 0, 0, 0, 20, 161, 1, 0, 0, 0, 22, 172, 1,
		0, 0, 0, 24, 185, 1, 0, 0, 0, 26, 187, 1, 0, 0, 0, 28, 189, 1, 0, 0, 0,
		30, 213, 1, 0, 0, 0, 32, 219, 1, 0, 0, 0, 34, 223, 1, 0, 0, 0, 36, 225,
		1, 0, 0, 0, 38, 227, 1, 0, 0, 0, 40, 230, 1, 0, 0, 0, 42, 232, 1, 0, 0,
		0, 44, 234, 1, 0, 0, 0, 46, 236, 1, 0, 0, 0, 48, 238, 1, 0, 0, 0, 50, 240,
		1, 0, 0, 0, 52, 248, 1, 0, 0, 0, 54, 253, 1, 0, 0, 0, 56, 260, 1, 0, 0,
		0, 58, 266, 1, 0, 0, 0, 60, 272, 1, 0, 0, 0, 62, 279, 1, 0, 0, 0, 64, 284,
		1, 0, 0, 0, 66, 291, 1, 0, 0, 0, 68, 295, 1, 0, 0, 0, 70, 299, 1, 0, 0,
		0, 72, 304, 1, 0, 0, 0, 74, 311, 1, 0, 0, 0, 76, 315, 1, 0, 0, 0, 78, 321,
		1, 0, 0, 0, 80, 325, 1, 0, 0, 0, 82, 332, 1, 0, 0, 0, 84, 341, 1, 0, 0,
		0, 86, 345, 1, 0, 0, 0, 88, 349, 1, 0, 0, 0, 90, 362, 1, 0, 0, 0, 92, 376,
		1, 0, 0, 0, 94, 390, 1, 0, 0, 0, 96, 405, 1, 0, 0, 0, 98, 409, 1, 0, 0,
		0, 100, 413, 1, 0, 0, 0, 102, 422, 1, 0, 0, 0, 104, 427, 1, 0, 0, 0, 106,
		434, 1, 0, 0, 0, 108, 440, 1, 0, 0, 0, 110, 447, 1, 0, 0, 0, 112, 457,
		1, 0, 0, 0, 114, 115, 5, 45, 0, 0, 115, 116, 5, 62, 0, 0, 116, 117, 1,
		0, 0, 0, 117, 118, 6, 0, 0, 0, 118, 5, 1, 0, 0, 0, 119, 120, 5, 64, 0,
		0, 120, 7, 1, 0, 0, 0, 121, 122, 5, 64, 0, 0, 122, 123, 3, 50, 23, 0, 123,
		124, 5, 40, 0, 0, 124, 125, 1, 0, 0, 0, 125, 126, 6, 2, 1, 0, 126, 9, 1,
		0, 0, 0, 127, 128, 5, 105, 0, 0, 128, 129, 5, 102, 0, 0, 129, 11, 1, 0,
		0, 0, 130, 131, 5, 101, 0, 0, 131, 132, 5, 110, 0, 0, 132, 133, 5, 100,
		0, 0, 133, 134, 5, 105, 0, 0, 134, 135, 5, 102, 0, 0, 135, 13, 1, 0, 0,
		0, 136, 137, 5, 61, 0, 0, 137, 15, 1, 0, 0, 0, 138, 144, 5, 34, 0, 0, 139,
		140, 5, 92, 0, 0, 140, 143, 9, 0, 0, 0, 141, 143, 8, 0, 0, 0, 142, 139,
		1, 0, 0, 0, 142, 141, 1, 0, 0, 0, 143, 146, 1, 0, 0, 0, 144, 142, 1, 0,
		0, 0, 144, 145, 1, 0, 0, 0, 145, 147, 1, 0, 0, 0, 146, 144, 1, 0, 0, 0,
		147, 148, 5, 34, 0, 0, 148, 17, 1, 0, 0, 0, 149, 155, 5, 39, 0, 0, 150,
		151, 5, 92, 0, 0, 151, 154, 9, 0, 0, 0, 152, 154, 8, 1, 0, 0, 153, 150,
		1, 0, 0, 0, 153, 152, 1, 0, 0, 0, 154, 157, 1, 0, 0, 0, 155, 153, 1, 0,
		0, 0, 155, 156, 1, 0, 0, 0, 156, 158, 1, 0, 0, 0, 157, 155, 1, 0, 0, 0,
		158, 159, 5, 39, 0, 0, 159, 19, 1, 0, 0, 0, 160, 162, 7, 2, 0, 0, 161,
		160, 1, 0, 0, 0, 162, 163, 1, 0, 0, 0, 163, 161, 1, 0, 0, 0, 163, 164,
		1, 0, 0, 0, 164, 165, 1, 0, 0, 0, 165, 167, 5, 46, 0, 0, 166, 168, 7, 2,
		0, 0, 167, 166, 1, 0, 0, 0, 168, 169, 1, 0, 0, 0, 169, 167, 1, 0, 0, 0,
		169, 170, 1, 0, 0, 0, 170, 21, 1, 0, 0, 0, 171, 173, 7, 2, 0, 0, 172, 171,
		1, 0, 0, 0, 173, 174, 1, 0, 0, 0, 174, 172, 1, 0, 0, 0, 174, 175, 1, 0,
		0, 0, 175, 23, 1, 0, 0, 0, 176, 177, 5, 116, 0, 0, 177, 178, 5, 114, 0,
		0, 178, 179, 5, 117, 0, 0, 179, 186, 5, 101, 0, 0, 180, 181, 5, 102, 0,
		0, 181, 182, 5, 97, 0, 0, 182, 183, 5, 108, 0, 0, 183, 184, 5, 115, 0,
		0, 184, 186, 5, 101, 0, 0, 185, 176, 1, 0, 0, 0, 185, 180, 1, 0, 0, 0,
		186, 25, 1, 0, 0, 0, 187, 188, 7, 3, 0, 0, 188, 27, 1, 0, 0, 0, 189, 190,
		3, 22, 9, 0, 190, 191, 7, 4, 0, 0, 191, 29, 1, 0, 0, 0, 192, 193, 5, 104,
		0, 0, 193, 194, 5, 116, 0, 0, 194, 195, 5, 116, 0, 0, 195, 196, 5, 112,
		0, 0, 196, 198, 1, 0, 0, 0, 197, 199, 5, 115, 0, 0, 198, 197, 1, 0, 0,
		0, 198, 199, 1, 0, 0, 0, 199, 200, 1, 0, 0, 0, 200, 201, 5, 58, 0, 0, 201,
		202, 5, 47, 0, 0, 202, 214, 5, 47, 0, 0, 203, 204, 5, 108, 0, 0, 204, 205,
		5, 111, 0, 0, 205, 206, 5, 99, 0, 0, 206, 207, 5, 97, 0, 0, 207, 208, 5,
		108, 0, 0, 208, 209, 5, 104, 0, 0, 209, 210, 5, 111, 0, 0, 210, 211, 5,
		115, 0, 0, 211, 212, 5, 116, 0, 0, 212, 214, 5, 58, 0, 0, 213, 192, 1,
		0, 0, 0, 213, 203, 1, 0, 0, 0, 214, 215, 1, 0, 0, 0, 215, 216, 3, 32, 14,
		0, 216, 31, 1, 0, 0, 0, 217, 220, 3, 34, 15, 0, 218, 220, 7, 5, 0, 0, 219,
		217, 1, 0, 0, 0, 219, 218, 1, 0, 0, 0, 220, 221, 1, 0, 0, 0, 221, 219,
		1, 0, 0, 0, 221, 222, 1, 0, 0, 0, 222, 33, 1, 0, 0, 0, 223, 224, 7, 6,
		0, 0, 224, 35, 1, 0, 0, 0, 225, 226, 5, 58, 0, 0, 226, 37, 1, 0, 0, 0,
		227, 228, 5, 58, 0, 0, 228, 229, 5, 58, 0, 0, 229, 39, 1, 0, 0, 0, 230,
		231, 5, 44, 0, 0, 231, 41, 1, 0, 0, 0, 232, 233, 5, 91, 0, 0, 233, 43,
		1, 0, 0, 0, 234, 235, 5, 93, 0, 0, 235, 45, 1, 0, 0, 0, 236, 237, 5, 40,
		0, 0, 237, 47, 1, 0, 0, 0, 238, 239, 5, 41, 0, 0, 239, 49, 1, 0, 0, 0,
		240, 244, 7, 7, 0, 0, 241, 243, 7, 8, 0, 0, 242, 241, 1, 0, 0, 0, 243,
		246, 1, 0, 0, 0, 244, 242, 1, 0, 0, 0, 244, 245, 1, 0, 0, 0, 245, 51, 1,
		0, 0, 0, 246, 244, 1, 0, 0, 0, 247, 249, 5, 13, 0, 0, 248, 247, 1, 0, 0,
		0, 248, 249, 1, 0, 0, 0, 249, 250, 1, 0, 0, 0, 250, 251, 5, 10, 0, 0, 251,
		53, 1, 0, 0, 0, 252, 254, 7, 9, 0, 0, 253, 252, 1, 0, 0, 0, 254, 255, 1,
		0, 0, 0, 255, 253, 1, 0, 0, 0, 255, 256, 1, 0, 0, 0, 256, 257, 1, 0, 0,
		0, 257, 258, 6, 25, 2, 0, 258, 55, 1, 0, 0, 0, 259, 261, 5, 13, 0, 0, 260,
		259, 1, 0, 0, 0, 260, 261, 1, 0, 0, 0, 261, 262, 1, 0, 0, 0, 262, 263,
		5, 10, 0, 0, 263, 264, 1, 0, 0, 0, 264, 265, 6, 26, 3, 0, 265, 57, 1, 0,
		0, 0, 266, 267, 5, 64, 0, 0, 267, 268, 3, 50, 23, 0, 268, 269, 5, 40, 0,
		0, 269, 270, 1, 0, 0, 0, 270, 271, 6, 27, 1, 0, 271, 59, 1, 0, 0, 0, 272,
		273, 5, 64, 0, 0, 273, 274, 5, 105, 0, 0, 274, 275, 5, 102, 0, 0, 275,
		276, 5, 40, 0, 0, 276, 277, 1, 0, 0, 0, 277, 278, 6, 28, 4, 0, 278, 61,
		1, 0, 0, 0, 279, 280, 5, 64, 0, 0, 280, 281, 5, 107, 0, 0, 281, 282, 5,
		101, 0, 0, 282, 283, 5, 121, 0, 0, 283, 63, 1, 0, 0, 0, 284, 285, 5, 64,
		0, 0, 285, 286, 5, 118, 0, 0, 286, 287, 5, 97, 0, 0, 287, 288, 5, 108,
		0, 0, 288, 289, 5, 117, 0, 0, 289, 290, 5, 101, 0, 0, 290, 65, 1, 0, 0,
		0, 291, 292, 3, 16, 6, 0, 292, 293, 1, 0, 0, 0, 293, 294, 6, 31, 5, 0,
		294, 67, 1, 0, 0, 0, 295, 296, 5, 91, 0, 0, 296, 297, 1, 0, 0, 0, 297,
		298, 6, 32, 6, 0, 298, 69, 1, 0, 0, 0, 299, 300, 5, 93, 0, 0, 300, 301,
		1, 0, 0, 0, 301, 302, 6, 33, 7, 0, 302, 71, 1, 0, 0, 0, 303, 305, 7, 9,
		0, 0, 304, 303, 1, 0, 0, 0, 305, 306, 1, 0, 0, 0, 306, 304, 1, 0, 0, 0,
		306, 307, 1, 0, 0, 0, 307, 308, 1, 0, 0, 0, 308, 309, 6, 34, 2, 0, 309,
		73, 1, 0, 0, 0, 310, 312, 8, 10, 0, 0, 311, 310, 1, 0, 0, 0, 312, 313,
		1, 0, 0, 0, 313, 311, 1, 0, 0, 0, 313, 314, 1, 0, 0, 0, 314, 75, 1, 0,
		0, 0, 315, 316, 5, 64, 0, 0, 316, 317, 3, 50, 23, 0, 317, 318, 5, 40, 0,
		0, 318, 319, 1, 0, 0, 0, 319, 320, 6, 36, 1, 0, 320, 77, 1, 0, 0, 0, 321,
		322, 5, 41, 0, 0, 322, 323, 1, 0, 0, 0, 323, 324, 6, 37, 3, 0, 324, 79,
		1, 0, 0, 0, 325, 326, 5, 64, 0, 0, 326, 327, 5, 107, 0, 0, 327, 328, 5,
		101, 0, 0, 328, 329, 5, 121, 0, 0, 329, 330, 1, 0, 0, 0, 330, 331, 6, 38,
		8, 0, 331, 81, 1, 0, 0, 0, 332, 333, 5, 64, 0, 0, 333, 334, 5, 118, 0,
		0, 334, 335, 5, 97, 0, 0, 335, 336, 5, 108, 0, 0, 336, 337, 5, 117, 0,
		0, 337, 338, 5, 101, 0, 0, 338, 339, 1, 0, 0, 0, 339, 340, 6, 39, 9, 0,
		340, 83, 1, 0, 0, 0, 341, 342, 5, 91, 0, 0, 342, 343, 1, 0, 0, 0, 343,
		344, 6, 40, 6, 0, 344, 85, 1, 0, 0, 0, 345, 346, 5, 93, 0, 0, 346, 347,
		1, 0, 0, 0, 347, 348, 6, 41, 7, 0, 348, 87, 1, 0, 0, 0, 349, 355, 5, 34,
		0, 0, 350, 351, 5, 92, 0, 0, 351, 354, 9, 0, 0, 0, 352, 354, 8, 0, 0, 0,
		353, 350, 1, 0, 0, 0, 353, 352, 1, 0, 0, 0, 354, 357, 1, 0, 0, 0, 355,
		353, 1, 0, 0, 0, 355, 356, 1, 0, 0, 0, 356, 358, 1, 0, 0, 0, 357, 355,
		1, 0, 0, 0, 358, 359, 5, 34, 0, 0, 359, 360, 1, 0, 0, 0, 360, 361, 6, 42,
		5, 0, 361, 89, 1, 0, 0, 0, 362, 368, 5, 39, 0, 0, 363, 364, 5, 92, 0, 0,
		364, 367, 9, 0, 0, 0, 365, 367, 8, 1, 0, 0, 366, 363, 1, 0, 0, 0, 366,
		365, 1, 0, 0, 0, 367, 370, 1, 0, 0, 0, 368, 366, 1, 0, 0, 0, 368, 369,
		1, 0, 0, 0, 369, 371, 1, 0, 0, 0, 370, 368, 1, 0, 0, 0, 371, 372, 5, 39,
		0, 0, 372, 373, 1, 0, 0, 0, 373, 374, 6, 43, 10, 0, 374, 91, 1, 0, 0, 0,
		375, 377, 7, 2, 0, 0, 376, 375, 1, 0, 0, 0, 377, 378, 1, 0, 0, 0, 378,
		376, 1, 0, 0, 0, 378, 379, 1, 0, 0, 0, 379, 380, 1, 0, 0, 0, 380, 384,
		5, 46, 0, 0, 381, 383, 7, 2, 0, 0, 382, 381, 1, 0, 0, 0, 383, 386, 1, 0,
		0, 0, 384, 382, 1, 0, 0, 0, 384, 385, 1, 0, 0, 0, 385, 387, 1, 0, 0, 0,
		386, 384, 1, 0, 0, 0, 387, 388, 6, 44, 11, 0, 388, 93, 1, 0, 0, 0, 389,
		391, 7, 2, 0, 0, 390, 389, 1, 0, 0, 0, 391, 392, 1, 0, 0, 0, 392, 390,
		1, 0, 0, 0, 392, 393, 1, 0, 0, 0, 393, 394, 1, 0, 0, 0, 394, 395, 6, 45,
		12, 0, 395, 95, 1, 0, 0, 0, 396, 397, 5, 116, 0, 0, 397, 398, 5, 114, 0,
		0, 398, 399, 5, 117, 0, 0, 399, 406, 5, 101, 0, 0, 400, 401, 5, 102, 0,
		0, 401, 402, 5, 97, 0, 0, 402, 403, 5, 108, 0, 0, 403, 404, 5, 115, 0,
		0, 404, 406, 5, 101, 0, 0, 405, 396, 1, 0, 0, 0, 405, 400, 1, 0, 0, 0,
		406, 407, 1, 0, 0, 0, 407, 408, 6, 46, 13, 0, 408, 97, 1, 0, 0, 0, 409,
		410, 7, 3, 0, 0, 410, 411, 1, 0, 0, 0, 411, 412, 6, 47, 14, 0, 412, 99,
		1, 0, 0, 0, 413, 417, 7, 7, 0, 0, 414, 416, 7, 8, 0, 0, 415, 414, 1, 0,
		0, 0, 416, 419, 1, 0, 0, 0, 417, 415, 1, 0, 0, 0, 417, 418, 1, 0, 0, 0,
		418, 420, 1, 0, 0, 0, 419, 417, 1, 0, 0, 0, 420, 421, 6, 48, 15, 0, 421,
		101, 1, 0, 0, 0, 422, 423, 5, 44, 0, 0, 423, 424, 1, 0, 0, 0, 424, 425,
		6, 49, 16, 0, 425, 103, 1, 0, 0, 0, 426, 428, 7, 9, 0, 0, 427, 426, 1,
		0, 0, 0, 428, 429, 1, 0, 0, 0, 429, 427, 1, 0, 0, 0, 429, 430, 1, 0, 0,
		0, 430, 431, 1, 0, 0, 0, 431, 432, 6, 50, 2, 0, 432, 105, 1, 0, 0, 0, 433,
		435, 5, 13, 0, 0, 434, 433, 1, 0, 0, 0, 434, 435, 1, 0, 0, 0, 435, 436,
		1, 0, 0, 0, 436, 437, 5, 10, 0, 0, 437, 438, 1, 0, 0, 0, 438, 439, 6, 51,
		17, 0, 439, 107, 1, 0, 0, 0, 440, 441, 5, 64, 0, 0, 441, 442, 5, 105, 0,
		0, 442, 443, 5, 102, 0, 0, 443, 444, 5, 40, 0, 0, 444, 445, 1, 0, 0, 0,
		445, 446, 6, 52, 4, 0, 446, 109, 1, 0, 0, 0, 447, 448, 5, 64, 0, 0, 448,
		449, 5, 101, 0, 0, 449, 450, 5, 110, 0, 0, 450, 451, 5, 100, 0, 0, 451,
		452, 5, 105, 0, 0, 452, 453, 5, 102, 0, 0, 453, 454, 1, 0, 0, 0, 454, 455,
		6, 53, 3, 0, 455, 111, 1, 0, 0, 0, 456, 458, 7, 9, 0, 0, 457, 456, 1, 0,
		0, 0, 458, 459, 1, 0, 0, 0, 459, 457, 1, 0, 0, 0, 459, 460, 1, 0, 0, 0,
		460, 461, 1, 0, 0, 0, 461, 462, 6, 54, 2, 0, 462, 113, 1, 0, 0, 0, 34,
		0, 1, 2, 3, 142, 144, 153, 155, 163, 169, 174, 185, 198, 213, 219, 221,
		244, 248, 255, 260, 306, 313, 353, 355, 366, 368, 378, 384, 392, 405, 417,
		429, 434, 459, 18, 5, 1, 0, 5, 2, 0, 6, 0, 0, 4, 0, 0, 2, 3, 0, 7, 7, 0,
		7, 18, 0, 7, 19, 0, 7, 28, 0, 7, 29, 0, 7, 8, 0, 7, 9, 0, 7, 10, 0, 7,
		11, 0, 7, 12, 0, 7, 22, 0, 7, 17, 0, 7, 23, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ParalLexerInit initializes any static state used to implement ParalLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewParalLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ParalLexerInit() {
	staticData := &ParalLexerLexerStaticData
	staticData.once.Do(parallexerLexerInit)
}

// NewParalLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewParalLexer(input antlr.CharStream) *ParalLexer {
	ParalLexerInit()
	l := new(ParalLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ParalLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ParalLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ParalLexer tokens.
const (
	ParalLexerCMD_ARROW             = 1
	ParalLexerAT                    = 2
	ParalLexerFUNCTION_START        = 3
	ParalLexerIF                    = 4
	ParalLexerENDIF                 = 5
	ParalLexerASSIGN                = 6
	ParalLexerSTRING                = 7
	ParalLexerSINGLE_QUOTE_STRING   = 8
	ParalLexerFLOAT                 = 9
	ParalLexerNUMBER                = 10
	ParalLexerBOOLEAN               = 11
	ParalLexerZERO_ONE              = 12
	ParalLexerDURATION              = 13
	ParalLexerURL                   = 14
	ParalLexerCOLON                 = 15
	ParalLexerCOLONCOLON            = 16
	ParalLexerCOMMA                 = 17
	ParalLexerLBRACK                = 18
	ParalLexerRBRACK                = 19
	ParalLexerLRBRACK               = 20
	ParalLexerRRBRACK               = 21
	ParalLexerIDENTIFIER            = 22
	ParalLexerNEWLINE               = 23
	ParalLexerWS                    = 24
	ParalLexerCOMMAND_NEWLINE       = 25
	ParalLexerFUNCTION_CALL_START   = 26
	ParalLexerCOMMAND_IF            = 27
	ParalLexerCOMMAND_LOOP_KEY      = 28
	ParalLexerCOMMAND_LOOP_VALUE    = 29
	ParalLexerCOMMAND_WS            = 30
	ParalLexerCOMMAND_RAW_TEXT      = 31
	ParalLexerNESTED_FUNCTION_START = 32
	ParalLexerFUNCTION_END          = 33
	ParalLexerFUNCTION_WS           = 34
	ParalLexerNESTED_IF             = 35
	ParalLexerIF_END                = 36
	ParalLexerIF_WS                 = 37
)

// ParalLexer modes.
const (
	ParalLexerCOMMAND = iota + 1
	ParalLexerFUNCTION
	ParalLexerIF_MODE
)
