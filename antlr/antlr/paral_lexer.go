// Code generated from antlr/ParalLexer.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ParalLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ParalLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func parallexerLexerInit() {
	staticData := &ParalLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "COMMAND", "FUNCTION", "IF_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'->'", "'@'", "'if'", "'endif'", "'='", "", "", "", "", "", "",
		"", "", "':'", "'::'", "", "", "", "'('", "", "", "", "", "", "", "",
		"'@key'", "'@value'", "", "", "", "", "", "", "'@endif'",
	}
	staticData.SymbolicNames = []string{
		"", "CMD_ARROW", "AT", "IF", "ENDIF", "ASSIGN", "STRING", "SINGLE_QUOTE_STRING",
		"FLOAT", "NUMBER", "BOOLEAN", "ZERO_ONE", "DURATION", "URL", "COLON",
		"COLONCOLON", "COMMA", "LBRACK", "RBRACK", "LRBRACK", "RRBRACK", "IDENTIFIER",
		"NEWLINE", "WS", "COMMAND_NEWLINE", "FUNCTION_CALL_START", "COMMAND_IF",
		"COMMAND_LOOP_KEY", "COMMAND_LOOP_VALUE", "COMMAND_WS", "COMMAND_RAW_TEXT",
		"NESTED_FUNCTION_START", "FUNCTION_END", "FUNCTION_WS", "NESTED_IF",
		"IF_END", "IF_WS",
	}
	staticData.RuleNames = []string{
		"CMD_ARROW", "AT", "IF", "ENDIF", "ASSIGN", "STRING", "SINGLE_QUOTE_STRING",
		"FLOAT", "NUMBER", "BOOLEAN", "ZERO_ONE", "DURATION", "URL", "URL_BODY",
		"URL_CHAR", "COLON", "COLONCOLON", "COMMA", "LBRACK", "RBRACK", "LRBRACK",
		"RRBRACK", "IDENTIFIER", "NEWLINE", "WS", "COMMAND_NEWLINE", "FUNCTION_CALL_START",
		"COMMAND_IF", "COMMAND_LOOP_KEY", "COMMAND_LOOP_VALUE", "COMMAND_STRING",
		"COMMAND_LBRACK", "COMMAND_RBRACK", "COMMAND_WS", "COMMAND_RAW_TEXT",
		"NESTED_FUNCTION_START", "FUNCTION_END", "FUNCTION_LBRACK", "FUNCTION_RBRACK",
		"FUNCTION_STRING", "FUNCTION_SINGLE_QUOTE_STRING", "FUNCTION_FLOAT",
		"FUNCTION_NUMBER", "FUNCTION_BOOLEAN", "FUNCTION_ZERO_ONE", "FUNCTION_IDENTIFIER",
		"FUNCTION_COMMA", "FUNCTION_WS", "NESTED_IF", "IF_END", "IF_WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 36, 426, 6, -1, 6, -1, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2,
		7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8,
		7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13,
		2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2,
		19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24,
		7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7,
		29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34,
		2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2,
		40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45,
		7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7,
		50, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 5, 5, 129,
		8, 5, 10, 5, 12, 5, 132, 9, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 5, 6,
		140, 8, 6, 10, 6, 12, 6, 143, 9, 6, 1, 6, 1, 6, 1, 7, 4, 7, 148, 8, 7,
		11, 7, 12, 7, 149, 1, 7, 1, 7, 4, 7, 154, 8, 7, 11, 7, 12, 7, 155, 1, 8,
		4, 8, 159, 8, 8, 11, 8, 12, 8, 160, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 9, 1, 9, 3, 9, 172, 8, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 3, 12, 185, 8, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		12, 3, 12, 200, 8, 12, 1, 12, 1, 12, 1, 13, 1, 13, 4, 13, 206, 8, 13, 11,
		13, 12, 13, 207, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17,
		1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1,
		22, 5, 22, 229, 8, 22, 10, 22, 12, 22, 232, 9, 22, 1, 23, 3, 23, 235, 8,
		23, 1, 23, 1, 23, 1, 24, 4, 24, 240, 8, 24, 11, 24, 12, 24, 241, 1, 24,
		1, 24, 1, 25, 3, 25, 247, 8, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1,
		26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1,
		29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 4, 33, 291, 8, 33, 11, 33, 12, 33, 292,
		1, 33, 1, 33, 1, 34, 4, 34, 298, 8, 34, 11, 34, 12, 34, 299, 1, 35, 1,
		35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37,
		1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 39, 5,
		39, 324, 8, 39, 10, 39, 12, 39, 327, 9, 39, 1, 39, 1, 39, 1, 39, 1, 39,
		1, 40, 1, 40, 1, 40, 1, 40, 5, 40, 337, 8, 40, 10, 40, 12, 40, 340, 9,
		40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 4, 41, 347, 8, 41, 11, 41, 12, 41,
		348, 1, 41, 1, 41, 5, 41, 353, 8, 41, 10, 41, 12, 41, 356, 9, 41, 1, 41,
		1, 41, 1, 42, 4, 42, 361, 8, 42, 11, 42, 12, 42, 362, 1, 42, 1, 42, 1,
		43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 3, 43, 376,
		8, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 5, 45, 386,
		8, 45, 10, 45, 12, 45, 389, 9, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1,
		46, 1, 47, 4, 47, 398, 8, 47, 11, 47, 12, 47, 399, 1, 47, 1, 47, 1, 48,
		1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1,
		49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 4, 50, 421, 8, 50, 11, 50, 12, 50,
		422, 1, 50, 1, 50, 0, 0, 51, 4, 1, 6, 2, 8, 3, 10, 4, 12, 5, 14, 6, 16,
		7, 18, 8, 20, 9, 22, 10, 24, 11, 26, 12, 28, 13, 30, 0, 32, 0, 34, 14,
		36, 15, 38, 16, 40, 17, 42, 18, 44, 19, 46, 20, 48, 21, 50, 22, 52, 23,
		54, 24, 56, 25, 58, 26, 60, 27, 62, 28, 64, 0, 66, 0, 68, 0, 70, 29, 72,
		30, 74, 31, 76, 32, 78, 0, 80, 0, 82, 0, 84, 0, 86, 0, 88, 0, 90, 0, 92,
		0, 94, 0, 96, 0, 98, 33, 100, 34, 102, 35, 104, 36, 4, 0, 1, 2, 3, 11,
		4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 4, 0, 10, 10, 13, 13, 39, 39, 92,
		92, 1, 0, 48, 57, 1, 0, 48, 49, 4, 0, 100, 100, 104, 104, 109, 109, 115,
		115, 6, 0, 37, 38, 45, 47, 58, 58, 61, 61, 63, 63, 95, 95, 3, 0, 48, 57,
		65, 90, 97, 122, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95,
		95, 97, 122, 2, 0, 9, 9, 32, 32, 5, 0, 9, 10, 13, 13, 40, 41, 44, 44, 64,
		64, 449, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1, 0, 0, 0, 0, 10, 1,
		0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 16, 1, 0, 0, 0, 0, 18,
		1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0,
		26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0,
		0, 38, 1, 0, 0, 0, 0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0,
		0, 0, 46, 1, 0, 0, 0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0,
		0, 0, 1, 54, 1, 0, 0, 0, 1, 56, 1, 0, 0, 0, 1, 58, 1, 0, 0, 0, 1, 60, 1,
		0, 0, 0, 1, 62, 1, 0, 0, 0, 1, 64, 1, 0, 0, 0, 1, 66, 1, 0, 0, 0, 1, 68,
		1, 0, 0, 0, 1, 70, 1, 0, 0, 0, 1, 72, 1, 0, 0, 0, 2, 74, 1, 0, 0, 0, 2,
		76, 1, 0, 0, 0, 2, 78, 1, 0, 0, 0, 2, 80, 1, 0, 0, 0, 2, 82, 1, 0, 0, 0,
		2, 84, 1, 0, 0, 0, 2, 86, 1, 0, 0, 0, 2, 88, 1, 0, 0, 0, 2, 90, 1, 0, 0,
		0, 2, 92, 1, 0, 0, 0, 2, 94, 1, 0, 0, 0, 2, 96, 1, 0, 0, 0, 2, 98, 1, 0,
		0, 0, 3, 100, 1, 0, 0, 0, 3, 102, 1, 0, 0, 0, 3, 104, 1, 0, 0, 0, 4, 106,
		1, 0, 0, 0, 6, 111, 1, 0, 0, 0, 8, 113, 1, 0, 0, 0, 10, 116, 1, 0, 0, 0,
		12, 122, 1, 0, 0, 0, 14, 124, 1, 0, 0, 0, 16, 135, 1, 0, 0, 0, 18, 147,
		1, 0, 0, 0, 20, 158, 1, 0, 0, 0, 22, 171, 1, 0, 0, 0, 24, 173, 1, 0, 0,
		0, 26, 175, 1, 0, 0, 0, 28, 199, 1, 0, 0, 0, 30, 205, 1, 0, 0, 0, 32, 209,
		1, 0, 0, 0, 34, 211, 1, 0, 0, 0, 36, 213, 1, 0, 0, 0, 38, 216, 1, 0, 0,
		0, 40, 218, 1, 0, 0, 0, 42, 220, 1, 0, 0, 0, 44, 222, 1, 0, 0, 0, 46, 224,
		1, 0, 0, 0, 48, 226, 1, 0, 0, 0, 50, 234, 1, 0, 0, 0, 52, 239, 1, 0, 0,
		0, 54, 246, 1, 0, 0, 0, 56, 252, 1, 0, 0, 0, 58, 258, 1, 0, 0, 0, 60, 265,
		1, 0, 0, 0, 62, 270, 1, 0, 0, 0, 64, 277, 1, 0, 0, 0, 66, 281, 1, 0, 0,
		0, 68, 285, 1, 0, 0, 0, 70, 290, 1, 0, 0, 0, 72, 297, 1, 0, 0, 0, 74, 301,
		1, 0, 0, 0, 76, 307, 1, 0, 0, 0, 78, 311, 1, 0, 0, 0, 80, 315, 1, 0, 0,
		0, 82, 319, 1, 0, 0, 0, 84, 332, 1, 0, 0, 0, 86, 346, 1, 0, 0, 0, 88, 360,
		1, 0, 0, 0, 90, 375, 1, 0, 0, 0, 92, 379, 1, 0, 0, 0, 94, 383, 1, 0, 0,
		0, 96, 392, 1, 0, 0, 0, 98, 397, 1, 0, 0, 0, 100, 403, 1, 0, 0, 0, 102,
		410, 1, 0, 0, 0, 104, 420, 1, 0, 0, 0, 106, 107, 5, 45, 0, 0, 107, 108,
		5, 62, 0, 0, 108, 109, 1, 0, 0, 0, 109, 110, 6, 0, 0, 0, 110, 5, 1, 0,
		0, 0, 111, 112, 5, 64, 0, 0, 112, 7, 1, 0, 0, 0, 113, 114, 5, 105, 0, 0,
		114, 115, 5, 102, 0, 0, 115, 9, 1, 0, 0, 0, 116, 117, 5, 101, 0, 0, 117,
		118, 5, 110, 0, 0, 118, 119, 5, 100, 0, 0, 119, 120, 5, 105, 0, 0, 120,
		121, 5, 102, 0, 0, 121, 11, 1, 0, 0, 0, 122, 123, 5, 61, 0, 0, 123, 13,
		1, 0, 0, 0, 124, 130, 5, 34, 0, 0, 125, 126, 5, 92, 0, 0, 126, 129, 9,
		0, 0, 0, 127, 129, 8, 0, 0, 0, 128, 125, 1, 0, 0, 0, 128, 127, 1, 0, 0,
		0, 129, 132, 1, 0, 0, 0, 130, 128, 1, 0, 0, 0, 130, 131, 1, 0, 0, 0, 131,
		133, 1, 0, 0, 0, 132, 130, 1, 0, 0, 0, 133, 134, 5, 34, 0, 0, 134, 15,
		1, 0, 0, 0, 135, 141, 5, 39, 0, 0, 136, 137, 5, 92, 0, 0, 137, 140, 9,
		0, 0, 0, 138, 140, 8, 1, 0, 0, 139, 136, 1, 0, 0, 0, 139, 138, 1, 0, 0,
		0, 140, 143, 1, 0, 0, 0, 141, 139, 1, 0, 0, 0, 141, 142, 1, 0, 0, 0, 142,
		144, 1, 0, 0, 0, 143, 141, 1, 0, 0, 0, 144, 145, 5, 39, 0, 0, 145, 17,
		1, 0, 0, 0, 146, 148, 7, 2, 0, 0, 147, 146, 1, 0, 0, 0, 148, 149, 1, 0,
		0, 0, 149, 147, 1, 0, 0, 0, 149, 150, 1, 0, 0, 0, 150, 151, 1, 0, 0, 0,
		151, 153, 5, 46, 0, 0, 152, 154, 7, 2, 0, 0, 153, 152, 1, 0, 0, 0, 154,
		155, 1, 0, 0, 0, 155, 153, 1, 0, 0, 0, 155, 156, 1, 0, 0, 0, 156, 19, 1,
		0, 0, 0, 157, 159, 7, 2, 0, 0, 158, 157, 1, 0, 0, 0, 159, 160, 1, 0, 0,
		0, 160, 158, 1, 0, 0, 0, 160, 161, 1, 0, 0, 0, 161, 21, 1, 0, 0, 0, 162,
		163, 5, 116, 0, 0, 163, 164, 5, 114, 0, 0, 164, 165, 5, 117, 0, 0, 165,
		172, 5, 101, 0, 0, 166, 167, 5, 102, 0, 0, 167, 168, 5, 97, 0, 0, 168,
		169, 5, 108, 0, 0, 169, 170, 5, 115, 0, 0, 170, 172, 5, 101, 0, 0, 171,
		162, 1, 0, 0, 0, 171, 166, 1, 0, 0, 0, 172, 23, 1, 0, 0, 0, 173, 174, 7,
		3, 0, 0, 174, 25, 1, 0, 0, 0, 175, 176, 3, 20, 8, 0, 176, 177, 7, 4, 0,
		0, 177, 27, 1, 0, 0, 0, 178, 179, 5, 104, 0, 0, 179, 180, 5, 116, 0, 0,
		180, 181, 5, 116, 0, 0, 181, 182, 5, 112, 0, 0, 182, 184, 1, 0, 0, 0, 183,
		185, 5, 115, 0, 0, 184, 183, 1, 0, 0, 0, 184, 185, 1, 0, 0, 0, 185, 186,
		1, 0, 0, 0, 186, 187, 5, 58, 0, 0, 187, 188, 5, 47, 0, 0, 188, 200, 5,
		47, 0, 0, 189, 190, 5, 108, 0, 0, 190, 191, 5, 111, 0, 0, 191, 192, 5,
		99, 0, 0, 192, 193, 5, 97, 0, 0, 193, 194, 5, 108, 0, 0, 194, 195, 5, 104,
		0, 0, 195, 196, 5, 111, 0, 0, 196, 197, 5, 115, 0, 0, 197, 198, 5, 116,
		0, 0, 198, 200, 5, 58, 0, 0, 199, 178, 1, 0, 0, 0, 199, 189, 1, 0, 0, 0,
		200, 201, 1, 0, 0, 0, 201, 202, 3, 30, 13, 0, 202, 29, 1, 0, 0, 0, 203,
		206, 3, 32, 14, 0, 204, 206, 7, 5, 0, 0, 205, 203, 1, 0, 0, 0, 205, 204,
		1, 0, 0, 0, 206, 207, 1, 0, 0, 0, 207, 205, 1, 0, 0, 0, 207, 208, 1, 0,
		0, 0, 208, 31, 1, 0, 0, 0, 209, 210, 7, 6, 0, 0, 210, 33, 1, 0, 0, 0, 211,
		212, 5, 58, 0, 0, 212, 35, 1, 0, 0, 0, 213, 214, 5, 58, 0, 0, 214, 215,
		5, 58, 0, 0, 215, 37, 1, 0, 0, 0, 216, 217, 5, 44, 0, 0, 217, 39, 1, 0,
		0, 0, 218, 219, 5, 91, 0, 0, 219, 41, 1, 0, 0, 0, 220, 221, 5, 93, 0, 0,
		221, 43, 1, 0, 0, 0, 222, 223, 5, 40, 0, 0, 223, 45, 1, 0, 0, 0, 224, 225,
		5, 41, 0, 0, 225, 47, 1, 0, 0, 0, 226, 230, 7, 7, 0, 0, 227, 229, 7, 8,
		0, 0, 228, 227, 1, 0, 0, 0, 229, 232, 1, 0, 0, 0, 230, 228, 1, 0, 0, 0,
		230, 231, 1, 0, 0, 0, 231, 49, 1, 0, 0, 0, 232, 230, 1, 0, 0, 0, 233, 235,
		5, 13, 0, 0, 234, 233, 1, 0, 0, 0, 234, 235, 1, 0, 0, 0, 235, 236, 1, 0,
		0, 0, 236, 237, 5, 10, 0, 0, 237, 51, 1, 0, 0, 0, 238, 240, 7, 9, 0, 0,
		239, 238, 1, 0, 0, 0, 240, 241, 1, 0, 0, 0, 241, 239, 1, 0, 0, 0, 241,
		242, 1, 0, 0, 0, 242, 243, 1, 0, 0, 0, 243, 244, 6, 24, 1, 0, 244, 53,
		1, 0, 0, 0, 245, 247, 5, 13, 0, 0, 246, 245, 1, 0, 0, 0, 246, 247, 1, 0,
		0, 0, 247, 248, 1, 0, 0, 0, 248, 249, 5, 10, 0, 0, 249, 250, 1, 0, 0, 0,
		250, 251, 6, 25, 2, 0, 251, 55, 1, 0, 0, 0, 252, 253, 5, 64, 0, 0, 253,
		254, 3, 48, 22, 0, 254, 255, 5, 40, 0, 0, 255, 256, 1, 0, 0, 0, 256, 257,
		6, 26, 3, 0, 257, 57, 1, 0, 0, 0, 258, 259, 5, 64, 0, 0, 259, 260, 5, 105,
		0, 0, 260, 261, 5, 102, 0, 0, 261, 262, 5, 40, 0, 0, 262, 263, 1, 0, 0,
		0, 263, 264, 6, 27, 4, 0, 264, 59, 1, 0, 0, 0, 265, 266, 5, 64, 0, 0, 266,
		267, 5, 107, 0, 0, 267, 268, 5, 101, 0, 0, 268, 269, 5, 121, 0, 0, 269,
		61, 1, 0, 0, 0, 270, 271, 5, 64, 0, 0, 271, 272, 5, 118, 0, 0, 272, 273,
		5, 97, 0, 0, 273, 274, 5, 108, 0, 0, 274, 275, 5, 117, 0, 0, 275, 276,
		5, 101, 0, 0, 276, 63, 1, 0, 0, 0, 277, 278, 3, 14, 5, 0, 278, 279, 1,
		0, 0, 0, 279, 280, 6, 30, 5, 0, 280, 65, 1, 0, 0, 0, 281, 282, 5, 91, 0,
		0, 282, 283, 1, 0, 0, 0, 283, 284, 6, 31, 6, 0, 284, 67, 1, 0, 0, 0, 285,
		286, 5, 93, 0, 0, 286, 287, 1, 0, 0, 0, 287, 288, 6, 32, 7, 0, 288, 69,
		1, 0, 0, 0, 289, 291, 7, 9, 0, 0, 290, 289, 1, 0, 0, 0, 291, 292, 1, 0,
		0, 0, 292, 290, 1, 0, 0, 0, 292, 293, 1, 0, 0, 0, 293, 294, 1, 0, 0, 0,
		294, 295, 6, 33, 1, 0, 295, 71, 1, 0, 0, 0, 296, 298, 8, 10, 0, 0, 297,
		296, 1, 0, 0, 0, 298, 299, 1, 0, 0, 0, 299, 297, 1, 0, 0, 0, 299, 300,
		1, 0, 0, 0, 300, 73, 1, 0, 0, 0, 301, 302, 5, 64, 0, 0, 302, 303, 3, 48,
		22, 0, 303, 304, 5, 40, 0, 0, 304, 305, 1, 0, 0, 0, 305, 306, 6, 35, 3,
		0, 306, 75, 1, 0, 0, 0, 307, 308, 5, 41, 0, 0, 308, 309, 1, 0, 0, 0, 309,
		310, 6, 36, 2, 0, 310, 77, 1, 0, 0, 0, 311, 312, 5, 91, 0, 0, 312, 313,
		1, 0, 0, 0, 313, 314, 6, 37, 6, 0, 314, 79, 1, 0, 0, 0, 315, 316, 5, 93,
		0, 0, 316, 317, 1, 0, 0, 0, 317, 318, 6, 38, 7, 0, 318, 81, 1, 0, 0, 0,
		319, 325, 5, 34, 0, 0, 320, 321, 5, 92, 0, 0, 321, 324, 9, 0, 0, 0, 322,
		324, 8, 0, 0, 0, 323, 320, 1, 0, 0, 0, 323, 322, 1, 0, 0, 0, 324, 327,
		1, 0, 0, 0, 325, 323, 1, 0, 0, 0, 325, 326, 1, 0, 0, 0, 326, 328, 1, 0,
		0, 0, 327, 325, 1, 0, 0, 0, 328, 329, 5, 34, 0, 0, 329, 330, 1, 0, 0, 0,
		330, 331, 6, 39, 5, 0, 331, 83, 1, 0, 0, 0, 332, 338, 5, 39, 0, 0, 333,
		334, 5, 92, 0, 0, 334, 337, 9, 0, 0, 0, 335, 337, 8, 1, 0, 0, 336, 333,
		1, 0, 0, 0, 336, 335, 1, 0, 0, 0, 337, 340, 1, 0, 0, 0, 338, 336, 1, 0,
		0, 0, 338, 339, 1, 0, 0, 0, 339, 341, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0,
		341, 342, 5, 39, 0, 0, 342, 343, 1, 0, 0, 0, 343, 344, 6, 40, 8, 0, 344,
		85, 1, 0, 0, 0, 345, 347, 7, 2, 0, 0, 346, 345, 1, 0, 0, 0, 347, 348, 1,
		0, 0, 0, 348, 346, 1, 0, 0, 0, 348, 349, 1, 0, 0, 0, 349, 350, 1, 0, 0,
		0, 350, 354, 5, 46, 0, 0, 351, 353, 7, 2, 0, 0, 352, 351, 1, 0, 0, 0, 353,
		356, 1, 0, 0, 0, 354, 352, 1, 0, 0, 0, 354, 355, 1, 0, 0, 0, 355, 357,
		1, 0, 0, 0, 356, 354, 1, 0, 0, 0, 357, 358, 6, 41, 9, 0, 358, 87, 1, 0,
		0, 0, 359, 361, 7, 2, 0, 0, 360, 359, 1, 0, 0, 0, 361, 362, 1, 0, 0, 0,
		362, 360, 1, 0, 0, 0, 362, 363, 1, 0, 0, 0, 363, 364, 1, 0, 0, 0, 364,
		365, 6, 42, 10, 0, 365, 89, 1, 0, 0, 0, 366, 367, 5, 116, 0, 0, 367, 368,
		5, 114, 0, 0, 368, 369, 5, 117, 0, 0, 369, 376, 5, 101, 0, 0, 370, 371,
		5, 102, 0, 0, 371, 372, 5, 97, 0, 0, 372, 373, 5, 108, 0, 0, 373, 374,
		5, 115, 0, 0, 374, 376, 5, 101, 0, 0, 375, 366, 1, 0, 0, 0, 375, 370, 1,
		0, 0, 0, 376, 377, 1, 0, 0, 0, 377, 378, 6, 43, 11, 0, 378, 91, 1, 0, 0,
		0, 379, 380, 7, 3, 0, 0, 380, 381, 1, 0, 0, 0, 381, 382, 6, 44, 12, 0,
		382, 93, 1, 0, 0, 0, 383, 387, 7, 7, 0, 0, 384, 386, 7, 8, 0, 0, 385, 384,
		1, 0, 0, 0, 386, 389, 1, 0, 0, 0, 387, 385, 1, 0, 0, 0, 387, 388, 1, 0,
		0, 0, 388, 390, 1, 0, 0, 0, 389, 387, 1, 0, 0, 0, 390, 391, 6, 45, 13,
		0, 391, 95, 1, 0, 0, 0, 392, 393, 5, 44, 0, 0, 393, 394, 1, 0, 0, 0, 394,
		395, 6, 46, 14, 0, 395, 97, 1, 0, 0, 0, 396, 398, 7, 9, 0, 0, 397, 396,
		1, 0, 0, 0, 398, 399, 1, 0, 0, 0, 399, 397, 1, 0, 0, 0, 399, 400, 1, 0,
		0, 0, 400, 401, 1, 0, 0, 0, 401, 402, 6, 47, 1, 0, 402, 99, 1, 0, 0, 0,
		403, 404, 5, 64, 0, 0, 404, 405, 5, 105, 0, 0, 405, 406, 5, 102, 0, 0,
		406, 407, 5, 40, 0, 0, 407, 408, 1, 0, 0, 0, 408, 409, 6, 48, 4, 0, 409,
		101, 1, 0, 0, 0, 410, 411, 5, 64, 0, 0, 411, 412, 5, 101, 0, 0, 412, 413,
		5, 110, 0, 0, 413, 414, 5, 100, 0, 0, 414, 415, 5, 105, 0, 0, 415, 416,
		5, 102, 0, 0, 416, 417, 1, 0, 0, 0, 417, 418, 6, 49, 2, 0, 418, 103, 1,
		0, 0, 0, 419, 421, 7, 9, 0, 0, 420, 419, 1, 0, 0, 0, 421, 422, 1, 0, 0,
		0, 422, 420, 1, 0, 0, 0, 422, 423, 1, 0, 0, 0, 423, 424, 1, 0, 0, 0, 424,
		425, 6, 50, 1, 0, 425, 105, 1, 0, 0, 0, 33, 0, 1, 2, 3, 128, 130, 139,
		141, 149, 155, 160, 171, 184, 199, 205, 207, 230, 234, 241, 246, 292, 299,
		323, 325, 336, 338, 348, 354, 362, 375, 387, 399, 422, 15, 5, 1, 0, 6,
		0, 0, 4, 0, 0, 5, 2, 0, 2, 3, 0, 7, 6, 0, 7, 17, 0, 7, 18, 0, 7, 7, 0,
		7, 8, 0, 7, 9, 0, 7, 10, 0, 7, 11, 0, 7, 21, 0, 7, 16, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ParalLexerInit initializes any static state used to implement ParalLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewParalLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ParalLexerInit() {
	staticData := &ParalLexerLexerStaticData
	staticData.once.Do(parallexerLexerInit)
}

// NewParalLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewParalLexer(input antlr.CharStream) *ParalLexer {
	ParalLexerInit()
	l := new(ParalLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ParalLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ParalLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ParalLexer tokens.
const (
	ParalLexerCMD_ARROW             = 1
	ParalLexerAT                    = 2
	ParalLexerIF                    = 3
	ParalLexerENDIF                 = 4
	ParalLexerASSIGN                = 5
	ParalLexerSTRING                = 6
	ParalLexerSINGLE_QUOTE_STRING   = 7
	ParalLexerFLOAT                 = 8
	ParalLexerNUMBER                = 9
	ParalLexerBOOLEAN               = 10
	ParalLexerZERO_ONE              = 11
	ParalLexerDURATION              = 12
	ParalLexerURL                   = 13
	ParalLexerCOLON                 = 14
	ParalLexerCOLONCOLON            = 15
	ParalLexerCOMMA                 = 16
	ParalLexerLBRACK                = 17
	ParalLexerRBRACK                = 18
	ParalLexerLRBRACK               = 19
	ParalLexerRRBRACK               = 20
	ParalLexerIDENTIFIER            = 21
	ParalLexerNEWLINE               = 22
	ParalLexerWS                    = 23
	ParalLexerCOMMAND_NEWLINE       = 24
	ParalLexerFUNCTION_CALL_START   = 25
	ParalLexerCOMMAND_IF            = 26
	ParalLexerCOMMAND_LOOP_KEY      = 27
	ParalLexerCOMMAND_LOOP_VALUE    = 28
	ParalLexerCOMMAND_WS            = 29
	ParalLexerCOMMAND_RAW_TEXT      = 30
	ParalLexerNESTED_FUNCTION_START = 31
	ParalLexerFUNCTION_END          = 32
	ParalLexerFUNCTION_WS           = 33
	ParalLexerNESTED_IF             = 34
	ParalLexerIF_END                = 35
	ParalLexerIF_WS                 = 36
)

// ParalLexer modes.
const (
	ParalLexerCOMMAND = iota + 1
	ParalLexerFUNCTION
	ParalLexerIF_MODE
)
